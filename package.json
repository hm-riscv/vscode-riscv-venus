{
	"name": "riscv-venus",
	"displayName": "RISC-V Venus Simulator",
	"version": "1.6.5",
	"publisher": "hm",
	"description": "RISC-V Venus Simulator embedded in VS Code",
	"author": {
		"name": "Munich University of Applied Sciences",
		"email": "stefan.wallentowitz@hm.edu"
	},
	"license": "MIT",
	"keywords": [
		"multi-root ready"
	],
	"engines": {
		"vscode": "^1.48.0"
	},
	"icon": "images/riscv-venus-icon.png",
	"categories": [
		"Debuggers"
	],
	"private": true,
	"repository": {
		"type": "git",
		"url": "https://github.com/hm-riscv/vscode-riscv-venus"
	},
	"bugs": {
		"url": "https://github.com/hm-riscv/vscode-riscv-venus/issues"
	},
	"preview": false,
	"scripts": {
		"watch": "webpack --watch --devtool nosources-source-map --mode development",
		"watchVenus": "grunt watchvenus",
		"compileAll": "grunt buildvenus && npm run webpack",
		"compile": "tsc -p ./src",
		"eslint": "eslint ./src/**/*.ts",
		"pretest": "npm run compile",
		"test": "node ./out/test/runTest.js",
		"package": "vsce package",
		"publish": "vsce publish",
		"vscode:prepublish": "webpack --mode production",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch"
	},
	"dependencies": {
		"await-notify": "1.0.1",
		"bufferutil": "^4.0.3",
		"gradle": "^1.2.4",
		"js-sorted-set": "^0.7.0",
		"jsdom": "^16.7.0",
		"json-schema-traverse": "^0.4.1",
		"kotlin": "^1.5.30",
		"lodash": "^4.17.21",
		"node-localstorage": "^2.2.1",
		"typescript": "^4.4.2",
		"utf-8-validate": "^5.0.5",
		"vscode-debugadapter": "1.41.1"
	},
	"devDependencies": {
		"@types/glob": "7.1.4",
		"@types/mocha": "8.0.3",
		"@types/node": "^14.17.14",
		"@types/vscode": "^1.48.0",
		"@typescript-eslint/eslint-plugin": "^4.30.0",
		"@typescript-eslint/parser": "^4.30.0",
		"@vscode/test-electron": "^1.6.2",
		"eslint": "^7.32.0",
		"eslint-config-standard": "^16.0.3",
		"eslint-plugin-import": "^2.24.2",
		"eslint-plugin-node": "^11.1.0",
		"eslint-plugin-promise": "^5.1.0",
		"grunt": "1.3.0",
		"grunt-cli": "^1.4.3",
		"grunt-contrib-copy": "^1.0.0",
		"grunt-exec": "^3.0.0",
		"mocha": "^8.4.0",
		"node-loader": "^1.0.3",
		"source-map-loader": "^3.0.0",
		"ts-loader": "^8.3.0",
		"vsce": "^1.96.3",
		"vscode-debugadapter-testsupport": "1.41.0",
		"webpack": "^5.9.0",
		"webpack-cli": "^4.2.0"
	},
	"main": "./dist/extension.js",
	"activationEvents": [
		"onDebug",
		"onCommand:extension.riscv-venus.getProgramName",
		"onCommand:riscv-venus.activate",
		"onLanguage:riscv",
		"workspaceContains:**/*.{s, S}"
	],
	"contributes": {
		"configuration": {
			"properties": {
				"riscv-venus.variableFormat": {
					"type": "string",
					"default": "hex",
					"enum": [
						"hex",
						"binary",
						"decimal",
						"ascii"
					]
				},
				"riscv-venus.forceAlignedAddressing": {
					"type": "boolean",
					"default": false,
					"description": "Force Aligned Addressing?"
				},
				"riscv-venus.mutableText": {
					"type": "boolean",
					"default": true,
					"description": "Mutable Text? Can't write into text segment if true."
				},
				"riscv-venus.ecallOnlyExit": {
					"type": "boolean",
					"default": false,
					"description": "Can Exit only with ecall (10)?"
				},
				"riscv-venus.setRegesOnInit": {
					"type": "boolean",
					"default": true,
					"description": "Initialize Registers with default Values?"
				},
				"riscv-venus.allowAccessBtnStackHeap": {
					"type": "boolean",
					"default": false,
					"description": "Allow Access Between Stack and Heap?"
				},
				"riscv-venus.maxSteps": {
					"type": "integer",
					"default": -1,
					"description": "Max number of steps: (Negative means ignored)"
				},
				"riscv-venus.onlyShowUsedRegs": {
					"type": "boolean",
					"default": false,
					"description": "Only show registers used during execution (experimental)"
				}
			}
		},
		"commands": [
			{
				"command": "riscv-venus.openAssembly",
				"title": "Venus: Open Assembly",
				"icon": {
					"light": "images/light/three-bars.svg",
					"dark": "images/dark/three-bars.svg"
				}
			},
			{
				"command": "riscv-venus.activate",
				"title": "Venus: Activate Extension",
				"icon": {
					"light": "images/light/three-bars.svg",
					"dark": "images/dark/three-bars.svg"
				}
			},
			{
				"command": "riscv-venus.openSettings",
				"title": "Venus: Open Settings",
				"icon": {
					"light": "images/light/three-bars.svg",
					"dark": "images/dark/three-bars.svg"
				}
			},
			{
				"command": "riscv-venus.setVariableFormat",
				"title": "Venus: Set Variable Format",
				"icon": {
					"light": "images/light/three-bars.svg",
					"dark": "images/dark/three-bars.svg"
				}
			},
			{
				"command": "riscv-venus.openLedMatrixUI",
				"title": "Venus: Open LED Matrix",
				"icon": {
					"light": "images/light/three-bars.svg",
					"dark": "images/dark/three-bars.svg"
				}
			},
			{
				"command": "riscv-venus.openRobotUI",
				"title": "Venus: Open Robot UI",
				"icon": {
					"light": "images/light/three-bars.svg",
					"dark": "images/dark/three-bars.svg"
				}
			},
			{
				"command": "riscv-venus.openSevenSegBoardUI",
				"title": "Venus: Open Seven Segment Board UI",
				"icon": {
					"light": "images/light/three-bars.svg",
					"dark": "images/dark/three-bars.svg"
				}
			},
			{
				"command": "riscv-venus.openMemory",
				"title": "Venus: Open Memory",
				"icon": {
					"light": "images/light/three-bars.svg",
					"dark": "images/dark/three-bars.svg"
				}
			},
			{
				"command": "riscv-venus.openTerminal",
				"title": "Venus: Open Terminal",
				"icon": {
					"light": "images/light/three-bars.svg",
					"dark": "images/dark/three-bars.svg"
				}
			},
			{
				"command": "riscv-venus.openDocumentation",
				"title": "Venus: Open Documentation",
				"icon": {
					"light": "images/light/three-bars.svg",
					"dark": "images/dark/three-bars.svg"
				}
			}
		],
		"views": {
			"debug": [
				{
					"when": "venus:showOptionsMenu",
					"id": "riscv-venus.venusMenu",
					"name": "Venus Options"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "riscv-venus.openAssembly",
					"when": "view == venusAssembly"
				}
			]
		},
		"languages": [
			{
				"id": "riscv",
				"extensions": [
					".s",
					".S"
				],
				"aliases": [
					"RISC-V"
				],
				"filenames": []
			}
		],
		"breakpoints": [
			{
				"language": "riscv"
			}
		],
		"colors": [
			{
				"id": "venus.debugLineBackground",
				"description": "Background color for active debug line",
				"defaults": {
					"dark": "#8174008c",
					"light": "#8174008c",
					"highContrast": "#8174008c"
				}
			}
		],
		"debuggers": [
			{
				"type": "venus",
				"label": "Venus Debug",
				"program": "./out/debugAdapter.js",
				"runtime": "node",
				"languages": [
					"assembler",
					"assembly",
					"riscv",
					"asm"
				],
				"configurationAttributes": {
					"launch": {
						"required": [
							"program"
						],
						"properties": {
							"program": {
								"type": "string",
								"description": "Absolute path to a text file.",
								"default": "${workspaceFolder}/${command:AskForProgramName}"
							},
							"stopOnEntry": {
								"type": "boolean",
								"description": "Automatically stop after launch.",
								"default": true
							},
							"stopAtBreakpoints": {
								"type": "boolean",
								"description": "If execution should stop at Breakpoints. If this is false execution runs until the program execution finishes.",
								"default": true
							},
							"openViews": {
								"description": "Which views to open on launch.",
								"type": "array",
								"default": [],
								"items": {
									"type": "string",
									"enum": [
										"Robot",
										"LED Matrix",
										"Seven Segment Board",
										"Assembly"
									]
								},
								"uniqueItems": true
							},
							"ledMatrixSize": {
								"type": "object",
								"default": {
									"x": 10,
									"y": 10
								},
								"description": "The wanted Size of the Led Matrix. The parameter must be in the format: {\"x\": 10, \"y\": 10}"
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"type": "venus",
						"request": "launch",
						"name": "Launch with all views",
						"program": "${file}",
						"stopOnEntry": true,
						"stopAtBreakpoints": true,
						"openViews": [
							"Robot",
							"LED Matrix",
							"Seven Segment Board"
						],
						"ledMatrixSize": {
							"x": 10,
							"y": 10
						}
					}
				],
				"configurationSnippets": [
					{
						"label": "Venus Debug: Launch specific file",
						"description": "Debugs the assembler file specified in program field",
						"body": {
							"type": "venus",
							"request": "launch",
							"name": "${2:Launch Program}",
							"program": "^\"\\${workspaceFolder}/${1:Program}\"",
							"stopOnEntry": true,
							"openViews": []
						}
					},
					{
						"label": "Venus Debug: Launch current file",
						"description": "Currently not properly working if there are Breakpoints across files.",
						"body": {
							"type": "venus",
							"request": "launch",
							"name": "${1:Debug Current File}",
							"program": "^\"\\${file}\"",
							"stopOnEntry": true,
							"openViews": []
						}
					},
					{
						"label": "Venus Debug: Launch",
						"description": "Asks the user which assembler file to debug",
						"body": {
							"type": "venus",
							"request": "launch",
							"name": "Ask for file name",
							"program": "^\"\\${workspaceFolder}/\\${command:AskForProgramName}\"",
							"stopOnEntry": true,
							"openViews": []
						}
					},
					{
						"label": "Venus Debug: All Options",
						"description": "This config list all the options available. You can delete the options you dont't need. This config debugs the current file",
						"body": {
							"type": "venus",
							"request": "launch",
							"name": "Launch with all views",
							"program": "^\"\\${file}\"",
							"stopOnEntry": true,
							"stopAtBreakpoints": true,
							"openViews": [
								"Robot",
								"LED Matrix",
								"Seven Segment Board"
							],
							"ledMatrixSize": {
								"x": 10,
								"y": 10
							}
						}
					}
				],
				"variables": {
					"AskForProgramName": "extension.riscv-venus.getProgramName"
				}
			}
		]
	}
}
